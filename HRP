import scipy.cluster.hierarchy as sch
import random
import numpy as np
import pandas as pd
import matplotlib.pyplot as mpl

def getIVP(cov,**kargs): #Compute the inverse-variance portfolio
    ivp = 1./np.diag(cov)
    ivp/= ivp.sum()
    return ivp
def getClusterVar(cov,cItems):
    cov_ = cov.loc[cItems,cItems]
    w_ = getIVP(cov_).reshape(-1,1)
    cVar = np.dot(np.dot(w_.T,cov_),w_)[0,0]
    return cVar
def getQuasiDiag(link):
    link = link.astype(int)
    sortIx = pd.Series([link[-1,0],link[-1,1]])
    numItems = link[-1,3]
    while sortIx.max()>=numItes:
        sortIx.index = range(0,sortIx.shape[0]*2,2)
        df0 = sortIx[sortIx >= numItems]
        i = df0.index
        j = df0.values - numItems
        sortIx[i] = link[j,0]
        df0 = pd.Series(link[j,1],index = i+1)
        sortIx = sortIx.append(df0)
        sortIx = sortIx.sort_Ix()
        sortIx.index = range(sortIx.shape[0])
    return sortIx.tolist()
